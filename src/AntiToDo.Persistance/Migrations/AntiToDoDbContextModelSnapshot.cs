// <auto-generated />
using System;
using AntiTask.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AntiToDo.Persistance.Migrations
{
    [DbContext(typeof(AntiToDoDbContext))]
    partial class AntiToDoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AntiToDo.Domain.Audit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Action")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("KeyValues")
                        .HasColumnType("longtext");

                    b.Property<string>("NewValues")
                        .HasColumnType("longtext");

                    b.Property<string>("OldValues")
                        .HasColumnType("longtext");

                    b.Property<string>("TableName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("AntiToDo.Domain.Estimation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("EsimationUnit")
                        .HasColumnType("int");

                    b.Property<ulong>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(0ul);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Estimation");
                });

            modelBuilder.Entity("AntiToDo.Domain.Priority", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<ulong>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(0ul);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Priority");
                });

            modelBuilder.Entity("AntiToDo.Domain.ToDoGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("EstimationId")
                        .HasColumnType("bigint");

                    b.Property<ulong>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(0ul);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("PriorityId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EstimationId")
                        .IsUnique();

                    b.HasIndex("PriorityId");

                    b.ToTable("ToDoGroup");
                });

            modelBuilder.Entity("AntiToDo.Domain.ToDoGroupHierarchy", b =>
                {
                    b.Property<Guid>("AncestorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DescendantId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<long?>("Distance")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("longtext");

                    b.HasKey("AncestorId", "DescendantId");

                    b.HasIndex("DescendantId");

                    b.ToTable("ToDoGroupHierarchy");
                });

            modelBuilder.Entity("AntiToDo.Domain.ToDoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("EstimationId")
                        .HasColumnType("bigint");

                    b.Property<ulong>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(0ul);

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("PriorityId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EstimationId")
                        .IsUnique();

                    b.HasIndex("PriorityId");

                    b.ToTable("ToDoItems");
                });

            modelBuilder.Entity("AntiToDo.Domain.ToDoItemHierarchy", b =>
                {
                    b.Property<Guid>("AncestorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DescendantId")
                        .HasColumnType("char(36)");

                    b.Property<long?>("Distance")
                        .HasColumnType("bigint");

                    b.HasKey("AncestorId", "DescendantId");

                    b.HasIndex("DescendantId");

                    b.ToTable("ToDoItemHierarchies");
                });

            modelBuilder.Entity("AntiToDo.Domain.ToDoGroup", b =>
                {
                    b.HasOne("AntiToDo.Domain.Estimation", "Estimation")
                        .WithOne("ToDoGroup")
                        .HasForeignKey("AntiToDo.Domain.ToDoGroup", "EstimationId");

                    b.HasOne("AntiToDo.Domain.Priority", "Priority")
                        .WithMany("ToDoGroups")
                        .HasForeignKey("PriorityId");

                    b.Navigation("Estimation");

                    b.Navigation("Priority");
                });

            modelBuilder.Entity("AntiToDo.Domain.ToDoGroupHierarchy", b =>
                {
                    b.HasOne("AntiToDo.Domain.ToDoGroup", "Ancestor")
                        .WithMany()
                        .HasForeignKey("AncestorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AntiToDo.Domain.ToDoGroup", "Descendant")
                        .WithMany()
                        .HasForeignKey("DescendantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ancestor");

                    b.Navigation("Descendant");
                });

            modelBuilder.Entity("AntiToDo.Domain.ToDoItem", b =>
                {
                    b.HasOne("AntiToDo.Domain.Estimation", "Estimation")
                        .WithOne("ToDoItem")
                        .HasForeignKey("AntiToDo.Domain.ToDoItem", "EstimationId");

                    b.HasOne("AntiToDo.Domain.Priority", "Priority")
                        .WithMany("ToDoItems")
                        .HasForeignKey("PriorityId");

                    b.Navigation("Estimation");

                    b.Navigation("Priority");
                });

            modelBuilder.Entity("AntiToDo.Domain.ToDoItemHierarchy", b =>
                {
                    b.HasOne("AntiToDo.Domain.ToDoItem", "Ancestor")
                        .WithMany()
                        .HasForeignKey("AncestorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AntiToDo.Domain.ToDoItem", "Descendant")
                        .WithMany()
                        .HasForeignKey("DescendantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ancestor");

                    b.Navigation("Descendant");
                });

            modelBuilder.Entity("AntiToDo.Domain.Estimation", b =>
                {
                    b.Navigation("ToDoGroup");

                    b.Navigation("ToDoItem");
                });

            modelBuilder.Entity("AntiToDo.Domain.Priority", b =>
                {
                    b.Navigation("ToDoGroups");

                    b.Navigation("ToDoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
